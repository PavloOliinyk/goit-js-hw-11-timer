{"version":3,"sources":["js/countdown-timer.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","timerRef","document","querySelector","makeMarkup","innerHTML","Refs","days","hours","mins","secs","startTimer","deadline","timerId","setInterval","updateCountdownTime","time","Date","now","Math","floor","textContent","clearInterval","timer"],"mappings":";AA6FA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA7FA,MAAMA,EAKJC,aAAY,SAAEC,EAAF,WAAYC,IAAc,EAAA,KAAA,eAAA,GAAA,EAAA,KAAA,gBAAA,GAAA,EAAA,KAAA,gBAAA,GAC/BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,SAAWC,SAASC,cAAc,KAAKJ,UAG9CK,aA6BOH,KAAAA,SAASI,UA5BE,ijBA+BdC,WACI,MAAA,SAAEL,GAAa,KAEd,MAAA,CACLM,KAAMN,EAASE,cAAc,uBAC7BK,MAAOP,EAASE,cAAc,wBAC9BM,KAAMR,EAASE,cAAc,uBAC7BO,KAAMT,EAASE,cAAc,wBAIjCQ,aACOP,KAAAA,aAECE,MAAAA,EAAO,KAAKA,KACZM,EAAW,KAAKZ,WAEjBa,KAAAA,QAAUC,YAAY,KAAKC,oBAAqB,IAAMH,EAAUN,GAGvES,oBAAoBH,EAAUN,GACtBU,MAAAA,EAAOJ,EAAWK,KAAKC,MAEvBX,EAAOY,KAAKC,MAAMJ,EAAQ,OAC1BR,EAAQW,KAAKC,MAAOJ,EAAQ,MAAyB,MACrDP,EAAOU,KAAKC,MAAOJ,EAAQ,KAAoB,KAC/CN,EAAOS,KAAKC,MAAOJ,EAAQ,IAAc,KAE3CA,GAAAA,GAAQ,EAKV,OAJAV,EAAKC,KAAKc,YAAcd,EACxBD,EAAKE,MAAMa,YAAcb,EACzBF,EAAKG,KAAKY,YAAcZ,OACxBH,EAAKI,KAAKW,YAAcX,GAI1BJ,EAAKC,KAAKc,YAAc,KACxBf,EAAKE,MAAMa,YAAc,KACzBf,EAAKG,KAAKY,YAAc,KACxBf,EAAKI,KAAKW,YAAc,KAExBC,cAAc,KAAKT,UAIvB,MAAMU,EAAQ,IAAI1B,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIiB,KAAK,kBAGvBM,EAAMZ;;AC7FN,aAAA,QAAA","file":"src.68066984.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  timerId;\n  selector;\n  timerRef;\n\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.timerRef = document.querySelector(this.selector);\n  }\n\n  makeMarkup() {\n    const markUp = `<div class='field'>\n    <span class='value' data-value='days'>\n      11\n    </span>\n    <span class='label'>Days</span>\n  </div>\n\n  <div class='field'>\n    <span class='value' data-value='hours'>\n      11\n    </span>\n    <span class='label'>Hours</span>\n  </div>\n\n  <div class='field'>\n    <span class='value' data-value='mins'>\n      11\n    </span>\n    <span class='label'>Minutes</span>\n  </div>\n\n  <div class='field'>\n    <span class='value' data-value='secs'>\n      11\n    </span>\n    <span class='label'>Seconds</span>\n  </div>`;\n\n    this.timerRef.innerHTML = markUp;\n  }\n\n  get Refs() {\n    const { timerRef } = this;\n\n    return {\n      days: timerRef.querySelector('[data-value=\"days\"]'),\n      hours: timerRef.querySelector('[data-value=\"hours\"]'),\n      mins: timerRef.querySelector('[data-value=\"mins\"]'),\n      secs: timerRef.querySelector('[data-value=\"secs\"]'),\n    };\n  }\n\n  startTimer() {\n    this.makeMarkup();\n\n    const Refs = this.Refs;\n    const deadline = this.targetDate;\n\n    this.timerId = setInterval(this.updateCountdownTime, 1000, deadline, Refs);\n  }\n\n  updateCountdownTime(deadline, Refs) {\n    const time = deadline - Date.now();\n\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n\n    if (time >= 0) {\n      Refs.days.textContent = days;\n      Refs.hours.textContent = hours;\n      Refs.mins.textContent = mins;\n      Refs.secs.textContent = secs;\n      return;\n    }\n\n    Refs.days.textContent = '00';\n    Refs.hours.textContent = '00';\n    Refs.mins.textContent = '00';\n    Refs.secs.textContent = '00';\n\n    clearInterval(this.timerId);\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 25, 2021'),\n});\n\ntimer.startTimer();\n","import './js/countdown-timer';\n"]}